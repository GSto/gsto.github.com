<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: consulting | Glenn Stovall]]></title>
  <link href="http://glennstovall.com/blog/categories/consulting/atom.xml" rel="self"/>
  <link href="http://glennstovall.com/"/>
  <updated>2015-05-28T14:27:26-04:00</updated>
  <id>http://glennstovall.com/</id>
  <author>
    <name><![CDATA[Glenn Stovall]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Take Out The Tech]]></title>
    <link href="http://glennstovall.com/blog/2014/03/05/take-out-the-tech/"/>
    <updated>2014-03-05T15:25:00-05:00</updated>
    <id>http://glennstovall.com/blog/2014/03/05/take-out-the-tech</id>
    <content type="html"><![CDATA[<p><img class="left" src="/images/articles/make_fire.jpg" width="260"></p>

<p>If you are a freelance developer, designer, photographer, or even a freelance sheep sheerer, it's easy to get caught up in what it is you do, versus why it is we actually do it. More important than why we do it, is why people are willing to pay us good money for what we do. In this article I'd like to take a look at why I decided to re-position my services, and most important of all, get you to stop talking like a nerd because it's costing you money and sales.</p>

<!-- more -->


<h2>No More Nerd Speak</h2>

<p>When I decided to focus more on being a consultant, and not just a "freelance web developer", one of my qualifiers for the kinds of clients I wanted to attract was that a client should not care about the tech stack I was working on. words like  "WordPress" and "Ruby on Rails" were dirty curse words as far as proposals were concerned. I had several reasons for this:</p>

<ul>
<li><strong>Client Filtering:</strong> Clients that use words like 'PHP Developer', are usually looking for contractors, not consultants. There is nothing wrong with being a contractor, I've done it many times, but it isn't in line with my future business goals.</li>
<li><strong>Focusing on Solutions &amp; Value:</strong> There is no problem that has to be solved by a certain language or framework. Some are better suited than others. A client that wants a "Rails app that does X" may be better served by a "Node.js app that does X" or a Mobile Application that does X". They may even be better served by a nice spreadsheet or an actionable plan they can stick to. By taking technical terms out of the conversations, it allows for more focus on the problem, and the solution to be discovered.</li>
<li><strong>Autonomy:</strong> Similar to the point above, I want the autonomy to decide what tool would be the best fit for the jobs I take on, and be able to use them. If a client does not know what tools are used, which they shouldn't, then they have no say in the matter.</li>
<li><strong>Client Interest:</strong> Clients don't care about this kind of stuff nearly as much we do. Clients are usually very busy people in their businesses and our lives. By leaving out talk of weird, complicated things that they don't understand and have no interest in, you are doing your clients a great kindness.</li>
</ul>


<h2>Closing the Text Editor</h2>

<p>One day at work I decided to do a mental exercise. If I close my text editor, how could I still provide value to clients? I wanted to step away from just thinking that "code = value" and take a more holistic approach at what I provide to clients.</p>

<ul>
<li><strong>Communication:</strong> Web developers and designers have a reputation for being unreliable and hard to reach. Being proactive with clients on phone, email, and in person makes them feel more secure about their project, reduces their stress, and prevents misunderstanding that can waste time on both ends of the table.</li>
<li><strong>Planning:</strong> Having a solid plan in place and communicating that plan has a lot of benefits. It maintains accountability and expectations on both sides. Providing a clear plan to a client on how you are going to perform work and when they can expect it to be delivered. It shows that you aren't just another unreliable, uncommunicative developer like they have probably encountered in the past.</li>
<li><strong>Research:</strong> Who is their target market? What is a good pricing strategy for their new product? How can your client reach their target demographic? Do they like the new feature implemented? Being able to provide answers to questions like this can help guide a client in the right direction, and help your work produce even more value.</li>
</ul>


<p>I've realized to think about deliverable products in a broader sense. A road map for a project is every bit as much of a deliverable as a new feature that has been coded, and should be treated and presented as such. (<strong>Pro-tip:</strong> clients like nicely formatted PDFs that they can share with other people in their company.)</p>

<h2>Don't Sell Yourself Short</h2>

<p>Designers, developers, copywriters, etc. are costing themselves money by thinking that only producing their core competency. I've had aspiring freelancers ask me "Should I bill for phone calls/meetings/emails?". I say yes. Some people will say because they are taking up your time, and that since being a freelancer usually equates to selling your time for money, client communication counts. They're right, but for the wrong reasons. The reason you bill for those times is <em>because you providing the client with value</em>. Your communications that help you gather information to deliver the exact solution, and ease the clients concern are just as valuable as the core product you produce, <strong>if not more so.</strong></p>

<p>So to other freelancers out there: <strong>Don't sell yourself short.</strong> And stop talking so much about how you swing your hammer, and instead about what you can build and why it's so valuable.</p>
]]></content>
  </entry>
  
</feed>
